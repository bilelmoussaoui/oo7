on:
  push:
    branches: [main]
  pull_request:

name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Build client (async-std / native)
        run: |
          cargo build --manifest-path ./client/Cargo.toml --no-default-features --features async-std --features native_crypto
      - name: Build client (async-std / OpenSSL)
        run: |
          cargo build --manifest-path ./client/Cargo.toml --no-default-features --features async-std --features openssl_crypto
      - name: Build client (tokio / native)
        run: |
          cargo build --manifest-path ./client/Cargo.toml --no-default-features --features tokio --features native_crypto
      - name: Build client (tokio / OpenSSL)
        run: |
          cargo build --manifest-path ./client/Cargo.toml --no-default-features --features tokio --features openssl_crypto

      - name: Build CLI
        run: |
          cargo build --manifest-path ./cli/Cargo.toml

      - name: Build Portal
        run: |
          cargo build --manifest-path ./portal/Cargo.toml

      - name: Test (native)
        run: |
          cargo test --manifest-path ./client/Cargo.toml --no-default-features --features async-std --features native_crypto
      - name: Test (OpenSSL)
        run: |
          cargo test --manifest-path ./client/Cargo.toml --no-default-features --features async-std --features openssl_crypto

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: rustup component add rustfmt
      - name: Rust Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
